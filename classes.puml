@startuml
class main{
function login
}
'security
interface login {
function login_name
let name
function password
}

abstract class user <map>{
}

class admin {
function <login> login
}

interface securiteit {

}
'users
class brouwer {
let name
let owner
function <adres> adres
function <selling_points> selling_points
function <brands> brands
}

class drinker {
let name
function brand-preferenc <brands>
function <adres> adres
function <selling_points> selling_points
function <brands> brands

}
abstract class mijn_bieren<map> {
let brands <brands>
 let gradatie <gradatie>
}
'---
class selling_points <list> {
function <adres> adres
}

class brands <map> {
const name
let name-beer
let type
let flavour
let color
let %
let tast
}
'data
abstract class adres <map> {
let street
let zipcode
let city
let state
let country
let (district)

}

abstract class download <map> {
function brands <brands>
}
abstract class gradatie {
??
}
'links
main "1" --> "1" login

download "1..*" -U-> "0..*" user

gradatie "0..*" <-D- "0..*" brands
gradatie "0..*" <-U-> "0..*" admin
gradatie "0..*" -D-> "0..*" download
gradatie "0..*" <-R-> "0..*" mijn_bieren

mijn_bieren "0..*" <-U- "0..*" brands


user "1" <-D-> "1" brouwer
user "1" <-D-> "1" drinker



drinker "0..1" -L-> "*" mijn_bieren


securiteit "1" -D-> "N" user
securiteit "1" -U-> "N" login


selling_points "1" <--> "N" brouwer
selling_points "1" ---> "N" drinker
selling_points "1" <--> "N" admin
selling_points "1" <--> "N" user


brands "N" <-U-> "0..1" admin
brands "N" <-U-> "0..N" drinker
brands "N" <-U-> "1" brouwer

admin "1" -L-> "0.N" drinker
admin "1" -R-> "0.N" brouwer

adres "1" <-D-> "1" brouwer
adres "1" -D-> "1" drinker
adres "1" -U-> "1" selling_points




@enduml
